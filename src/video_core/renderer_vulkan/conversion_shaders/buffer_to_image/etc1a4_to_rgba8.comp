#version 450
#include "../etc_utils.comp"

struct SubTileA {
    uint8_t alpha[8];
    SubTile subtile;
};

layout(binding = 0) readonly buffer src_buffer {
     SubTileA subtiles[];
};

layout(binding = 1, rgba8ui) uniform writeonly lowp uimage2D dst_image;

void main() {
    SubTileA subtile = subtiles[ETCSubtileIndex()];
    u8vec3 color = SampleFromSubTile(subtile.subtile, u8vec2(gl_LocalInvocationID.xy));
    uint alpha_idx = gl_LocalInvocationID.x * 4 + gl_LocalInvocationID.y;
    uint8_t alpha = subtile.alpha[alpha_idx / 2];
    [[flatten]] if (alpha_idx % 2u == 0) {
        alpha = (alpha << 4) | (alpha & uint8_t(0x0F));
    } else {
        alpha = (alpha >> 4) | (alpha & uint8_t(0xF0));
    }
    imageStore(dst_image, GetImageCoord(), u8vec4(color, alpha));
}
